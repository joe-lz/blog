{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AV from \"leancloud-storage\";\nexport var createAssets = function createAssets(params) {\n  return new Promise(function (resolve, reject) {\n    var file = new AV.File(\"avatar.jpg\", params.e); // file.set('status', 1)\n    // file.set('user', AV.User.current())\n\n    file.save().then(function _callee(file) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"\\u6587\\u4EF6\\u4FDD\\u5B58\\u5B8C\\u6210\\u3002objectId\\uFF1A\".concat(file.id));\n              resolve(file);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }, function (error) {\n      // 保存失败，可能是文件无法被读取，或者上传过程中出现问题\n      reject(error);\n    });\n  });\n};\nexport var getAssetsList = function getAssetsList() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Promise(function (resolve, reject) {\n    var query = new AV.Query(\"_File\");\n    query.descending('createdAt');\n    query.limit(50);\n    Object.keys(params).map(function (keyname) {\n      query.equalTo(keyname, params[keyname]);\n    });\n    query.equalTo('metaData.owner', AV.User.current().id);\n    query.find().then(function (res) {\n      resolve(res);\n    })[\"catch\"](function (err) {\n      reject(err);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}