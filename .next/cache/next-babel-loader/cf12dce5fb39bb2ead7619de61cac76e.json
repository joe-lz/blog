{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport AV from 'leancloud-storage';\nimport dynamic from 'next/dynamic';\nimport { Table, Tag, Space, Modal, Form, Input, Button, Checkbox, notification } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport styles from './index.module.scss';\nimport Upload from 'src/components/admin/Upload';\nimport { createTopics, getTopicList, updateTopic } from 'src/service/topics';\n\nfunction AdminHome(props) {\n  var _useState = useState(false),\n      uploadShow = _useState[0],\n      setuploadShow = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      settitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      desc = _useState3[0],\n      setdesc = _useState3[1];\n\n  var _useState4 = useState([]),\n      list = _useState4[0],\n      setlist = _useState4[1];\n\n  var update = function update(item) {\n    var params,\n        _args = arguments;\n    return _regeneratorRuntime.async(function update$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateTopic({\n              topicItem: item,\n              params: params\n            }));\n\n          case 3:\n            setuploadShow(false);\n            notification.success({\n              message: '更新成功' // description: \"请输入用户名、密码\",\n\n            });\n            props.onChange();\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.item\n  }, __jsx(\"div\", {\n    className: styles.item_img,\n    onClick: function onClick() {\n      setuploadShow(true);\n    },\n    style: {\n      backgroundImage: \"url(\".concat(props.item.attributes.url, \")\")\n    }\n  }, props.item.attributes.url ? '' : '上传'), __jsx(\"div\", {\n    className: styles.item_right\n  }, __jsx(\"p\", {\n    className: styles.title\n  }, props.item.attributes.title), __jsx(\"p\", {\n    className: styles.desc\n  }, props.item.attributes.desc), __jsx(Button, {\n    className: styles.btn,\n    size: \"small\",\n    type: \"primary\",\n    onClick: function onClick() {\n      update(props.item, {\n        status: props.item.attributes.status === 1 ? 2 : 1\n      });\n    }\n  }, props.item.attributes.status === 1 ? '上线' : '下线')), __jsx(Modal, {\n    width: 900,\n    visible: uploadShow,\n    onCancel: function onCancel() {\n      setuploadShow(false);\n    },\n    onOk: function onOk() {},\n    okText: \"\\u4FDD\\u5B58\",\n    cancelText: \"\\u53D6\\u6D88\",\n    bodyStyle: {\n      padding: 0,\n      maxHeight: 600,\n      overflowY: 'scroll',\n      position: 'relative'\n    },\n    footer: null\n  }, uploadShow && __jsx(Upload, {\n    onChoose: function _callee(_ref) {\n      var url;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = _ref.url;\n              update(props.item, {\n                url: url\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  })));\n}\n\nexport default AdminHome;","map":null,"metadata":{},"sourceType":"module"}