{"ast":null,"code":"import AV from 'leancloud-storage';\nexport const createArticle = params => {\n  return new Promise((resolve, reject) => {\n    const articles = new AV.Object('CMS_Articles');\n    articles.set('status', 1); // articles.set('user', AV.User.current())\n\n    Object.keys(params).map(keyname => {\n      articles.set(keyname, params[keyname]);\n    }); // 将对象保存到云端\n\n    articles.save().then(res => {\n      resolve(res);\n    }, error => {\n      // 异常处理\n      reject(error);\n    });\n  });\n};\nexport const updateArticle = ({\n  articleItem,\n  params\n}) => {\n  return new Promise((resolve, reject) => {\n    // articleItem.set(\"articleVal\", articleVal);\n    // articleItem.set(\"title\", articleTitle);\n    if (params.views) {\n      articleItem.increment('views', params.views);\n    } else if (params.collects) {\n      articleItem.increment('collects', params.collects);\n    } else if (params.likes) {\n      articleItem.increment('likes', params.likes);\n    } else {\n      Object.keys(params).map(keyname => {\n        articleItem.set(keyname, params[keyname]);\n      });\n    }\n\n    articleItem.save().then(res => {\n      resolve(res);\n    }, error => {\n      // 异常处理\n      reject(error);\n    });\n  });\n};\nexport const getArticleList = (params = {}) => {\n  return new Promise((resolve, reject) => {\n    const query = new AV.Query('CMS_Articles');\n    query.descending('createdAt');\n    query.include('author');\n    query.limit(50);\n    Object.keys(params).map(keyname => {\n      query.equalTo(keyname, params[keyname]);\n    });\n    query.find().then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const getArticleById = ({\n  id\n}) => {\n  return new Promise((resolve, reject) => {\n    const query = new AV.Query('CMS_Articles');\n    query.include('author');\n    query.get(id).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}