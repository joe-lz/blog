{"ast":null,"code":"import AV from \"leancloud-storage\";\nimport shortid from \"shortid\";\nexport const getMyUserInfo = (params = {}) => {\n  return new Promise((resolve, reject) => {\n    const query = new AV.Query(\"CMS_UserInfo\");\n    const curUser = AV.User.current();\n    query.equalTo(\"user\", curUser);\n    query.first().then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const createUserInfo = (params = {}) => {\n  return new Promise((resolve, reject) => {\n    // 创建userinfo\n    const curUser = AV.User.current();\n    const userinfoObj = new AV.Object(\"CMS_UserInfo\");\n    userinfoObj.set(\"user\", curUser);\n    userinfoObj.set(\"nickname\", curUser.toJSON().username);\n    userinfoObj.set(\"priority\", 1); // 权限等级 默认：1 未授权\n\n    userinfoObj.set(\"shortid\", shortid.generate()); // shortid\n    // 将对象保存到云端\n\n    userinfoObj.save().then(todo => {\n      resolve(todo);\n    }, error => {\n      // 异常处理\n      reeject(error);\n    });\n  });\n};\nexport const getUserInfoById = (params = {}) => {\n  return new Promise((resolve, reject) => {\n    const query = new AV.Query(\"CMS_UserInfo\");\n    query.get(params.id).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\nexport const updateUserInfo = ({\n  userinfoItem,\n  params\n}) => {\n  return new Promise((resolve, reject) => {\n    Object.keys(params).map(keyname => {\n      userinfoItem.set(keyname, params[keyname]);\n    });\n    userinfoItem.save().then(res => {\n      resolve(res);\n    }, error => {\n      // 异常处理\n      reject(error);\n    });\n  });\n}; // 关注\n\nexport const userFollow = ({\n  userid\n}) => {\n  return new Promise((resolve, reject) => {\n    var query = AV.User.current().followeeQuery(); // query.include('followee')\n\n    query.count().then(number => {\n      if (number > 50) {\n        reject(\"超过最大关注人数(50人)\");\n      } else {\n        AV.User.current().follow(userid).then(res => {\n          resolve(res);\n        }, error => {\n          // 异常处理\n          reject(\"关注失败\");\n        });\n      }\n    });\n  });\n}; // 取消关注\n\nexport const userUnFollow = ({\n  userid\n}) => {\n  return new Promise((resolve, reject) => {\n    AV.User.current().unfollow(userid).then(res => {\n      resolve(res);\n    }, error => {\n      // 异常处理\n      reject(error);\n    });\n  });\n}; // 获取我关注的用户列表\n\nexport const userFolloweeList = () => {\n  return new Promise((resolve, reject) => {\n    if (!AV.User.current()) {\n      reject([]);\n    } else {\n      var query = AV.User.current().followeeQuery();\n      query.include(\"followee\");\n      query.find().then(followees => {\n        //关注的用户列表 followees\n        resolve(followees);\n      });\n    }\n  });\n}; // 获取用户关注数\n\nexport const userFolloweeNumber = ({\n  userItem\n}) => {\n  return new Promise((resolve, reject) => {\n    var query = userItem.followeeQuery();\n    query.count().then(number => {\n      resolve(number);\n    });\n  });\n}; // 获取用户粉丝数\n\nexport const userFollowerNumber = ({\n  userItem\n}) => {\n  return new Promise((resolve, reject) => {\n    var query = userItem.followerQuery();\n    query.count().then(number => {\n      resolve(number);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}