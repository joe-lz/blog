{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport AV from 'leancloud-storage';\nimport dynamic from 'next/dynamic';\nimport { Tree, Button, notification, Input, Modal } from 'antd';\nimport { PlusOutlined, DownOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect } from 'react'; // import { v4 as uuidv4 } from \"uuid\";\n\nimport shortid from 'shortid';\nimport styles from './index.module.scss';\nimport Layout from 'src/components/admin/Layout';\nimport defaultMenu, { handleformatData } from 'src/lib/defaultMenu';\nimport { createMenus, updateMenus, getMenusList } from 'src/service/menu';\n\nfunction AdminHome() {\n  var _useState = useState(null),\n      curMenuObj = _useState[0],\n      setcurMenuObj = _useState[1];\n\n  var _useState2 = useState([]),\n      curMenu = _useState2[0],\n      setcurMenu = _useState2[1];\n\n  var _useState3 = useState(false),\n      level1Show = _useState3[0],\n      setlevel1Show = _useState3[1];\n\n  var _useState4 = useState(''),\n      level1Title = _useState4[0],\n      setlevel1Title = _useState4[1];\n\n  var _useState5 = useState(null),\n      selectedMenu = _useState5[0],\n      setselectedMenu = _useState5[1];\n\n  var _useState6 = useState(false),\n      updateShow = _useState6[0],\n      setupdateShow = _useState6[1];\n\n  var _useState7 = useState(null),\n      curUserInfo = _useState7[0],\n      setcurUserInfo = _useState7[1];\n\n  var onSelect = function onSelect(select, info) {\n    var obj = {\n      title: info.node.title,\n      key: info.node.key\n    };\n    setselectedMenu(obj);\n    setupdateShow(true);\n  };\n\n  var updateFunction = function updateFunction(newValue) {\n    return _regeneratorRuntime.async(function updateFunction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!curMenuObj) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateMenus({\n              menuItem: curMenuObj,\n              params: {\n                value: newValue\n              }\n            }));\n\n          case 3:\n            setupdateShow(false);\n            handleGetMenu();\n            notification.success({\n              message: '更新成功' // description: \"请输入用户名、密码\",\n\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDrop = function onDrop(info) {\n    var result = handleformatData(info, curMenu);\n    updateFunction(result);\n  };\n\n  var createLevel1 = function createLevel1() {\n    var newObj;\n    return _regeneratorRuntime.async(function createLevel1$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (level1Title) {\n              _context2.next = 3;\n              break;\n            }\n\n            notification.error({\n              message: '请输入标题' // description: \"请输入用户名、密码\",\n\n            });\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            newObj = {\n              title: level1Title,\n              key: shortid.generate()\n            };\n            curMenu.push(newObj);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(updateFunction(curMenu));\n\n          case 7:\n            setlevel1Show(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleUpdate = function handleUpdate() {\n    var newcurMenu = curMenu.map(function (obj1) {\n      if (obj1.key === selectedMenu.key) {\n        obj1.title = selectedMenu.title;\n      }\n\n      if (obj1.children) {\n        obj1.children.map(function (obj2) {\n          if (obj2.key === selectedMenu.key) {\n            obj2.title = selectedMenu.title;\n          }\n\n          return obj2;\n        });\n      }\n\n      return obj1;\n    });\n    updateFunction(newcurMenu);\n  };\n\n  var handleGetMenu = function handleGetMenu() {\n    var res, resMenu;\n    return _regeneratorRuntime.async(function handleGetMenu$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getMenusList());\n\n          case 2:\n            res = _context3.sent;\n\n            if (!res) {\n              _context3.next = 8;\n              break;\n            }\n\n            setcurMenu(res.attributes.value);\n            setcurMenuObj(res);\n            _context3.next = 13;\n            break;\n\n          case 8:\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(createMenus());\n\n          case 10:\n            resMenu = _context3.sent;\n            setcurMenu(defaultMenu);\n            setcurMenuObj(resMenu);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    handleGetMenu();\n  }, []);\n  return __jsx(Layout, {\n    onChange: function onChange(params) {\n      setcurUserInfo(params.userinfo);\n    }\n  }, curUserInfo && curUserInfo.toJSON().priority === 100 ? __jsx(\"div\", {\n    className: styles.menus\n  }, __jsx(\"p\", {\n    className: \"_admin_body_section_title\"\n  }, \"\\u81EA\\u5B9A\\u4E49\\u83DC\\u5355\"), __jsx(\"div\", {\n    className: \"_admin_body_section_block\",\n    style: {\n      padding: 30\n    }\n  }, __jsx(\"div\", {\n    className: styles.block_waring\n  }, __jsx(InfoCircleOutlined, {\n    style: {\n      color: 'RGBA(53, 90, 207, 1.00)',\n      fontSize: 20\n    }\n  }), __jsx(\"p\", null, \"\\u62D6\\u62FD\\u76EE\\u5F55\\u8FDB\\u884C\\u6392\\u5E8F\\uFF0C\\u548C\\u5C42\\u7EA7\\u7BA1\\u7406\")), __jsx(Tree, {\n    showLine: true // switcherIcon={<DownOutlined />}\n    ,\n    defaultExpandAll: true,\n    onSelect: onSelect,\n    onDrop: onDrop,\n    draggable: true // blockNode\n    ,\n    treeData: curMenu\n  })), __jsx(\"div\", null, __jsx(Button, {\n    type: \"primary\",\n    shape: \"round\",\n    icon: __jsx(PlusOutlined, null),\n    size: 14,\n    style: {\n      marginRight: 15\n    },\n    onClick: function onClick() {\n      setlevel1Show(true);\n    }\n  }, \"\\u4E00\\u7EA7\\u76EE\\u5F55\")), __jsx(Modal, {\n    title: \"\\u4E00\\u7EA7\\u76EE\\u5F55\",\n    visible: level1Show,\n    onCancel: function onCancel() {\n      setlevel1Show(false);\n    },\n    onOk: function onOk() {\n      createLevel1();\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\u6807\\u9898\",\n    onChange: function onChange(e) {\n      setlevel1Title(e.target.value);\n    }\n  })), __jsx(Modal, {\n    title: \"\\u66F4\\u65B0\",\n    visible: updateShow,\n    onCancel: function onCancel() {\n      setupdateShow(false);\n    },\n    onOk: function onOk() {\n      handleUpdate();\n    },\n    okText: \"\\u521B\\u5EFA\",\n    cancelText: \"\\u53D6\\u6D88\"\n  }, __jsx(Input, {\n    placeholder: \"\\u6807\\u9898\",\n    value: selectedMenu ? selectedMenu.title : '',\n    onChange: function onChange(e) {\n      setselectedMenu({\n        title: e.target.value,\n        key: selectedMenu.key\n      });\n    }\n  }))) : __jsx(\"div\", {\n    className: \"_admin_body_section_block\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: 100\n    }\n  }, \"\\u6682\\u65E0\\u6743\\u9650\\uFF0C\\u8BF7\\u8054\\u7CFB\\u7BA1\\u7406\\u5458\\u5F00\\u901A\\uFF5E\"));\n}\n\nexport default AdminHome;","map":null,"metadata":{},"sourceType":"module"}